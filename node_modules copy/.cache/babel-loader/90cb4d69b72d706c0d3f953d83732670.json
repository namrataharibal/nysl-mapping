{"ast":null,"code":"var _jsxFileName = \"/Users/Namrata/Documents/Projects/nysl-mapping/src/components/DropdownMultiple.js\";\nimport React, { Component } from 'react';\nimport FontAwesome from 'react-fontawesome'; // import '../styles/global.css'\n\nclass DropdownMultiple extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listOpen: false,\n      headerTitle: this.props.title,\n      timeOut: null\n    };\n    this.close = this.close.bind(this);\n  }\n\n  componentDidUpdate() {\n    const listOpen = this.state.listOpen;\n    setTimeout(() => {\n      if (listOpen) {\n        window.addEventListener('click', this.close);\n      } else {\n        window.removeEventListener('click', this.close);\n      }\n    }, 0);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('click', this.close);\n  }\n\n  close(timeOut) {\n    this.setState({\n      listOpen: false\n    });\n  }\n\n  static getDerivedStateFromProps(nextProps) {\n    const count = nextProps.list.filter(function (a) {\n      return a.selected;\n    }).length;\n\n    if (count === 0) {\n      return {\n        headerTitle: nextProps.title\n      };\n    } else if (count === 1) {\n      return {\n        headerTitle: \"\".concat(count, \" \").concat(nextProps.titleHelper)\n      };\n    } else if (count > 1) {\n      return {\n        headerTitle: \"\".concat(count, \" \").concat(nextProps.titleHelper, \"s\")\n      };\n    }\n  }\n\n  toggleList() {\n    this.setState(prevState => ({\n      listOpen: !prevState.listOpen\n    }));\n  }\n\n  render() {\n    const _this$props = this.props,\n          list = _this$props.list,\n          toggleItem = _this$props.toggleItem;\n    const _this$state = this.state,\n          listOpen = _this$state.listOpen,\n          headerTitle = _this$state.headerTitle;\n    return React.createElement(\"div\", {\n      className: \"dd-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"dd-header\",\n      onClick: () => this.toggleList(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"dd-header-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, headerTitle), listOpen ? React.createElement(FontAwesome, {\n      name: \"angle-up\",\n      size: \"2x\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }) : React.createElement(FontAwesome, {\n      name: \"angle-down\",\n      size: \"2x\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    })), listOpen && React.createElement(\"ul\", {\n      className: \"dd-list\",\n      onClick: e => e.stopPropagation(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, list.map(item => React.createElement(\"li\", {\n      className: \"dd-list-item\",\n      key: item.title,\n      onClick: () => toggleItem(item.id, item.key),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, item.title, \" \", item.selected && React.createElement(FontAwesome, {\n      name: \"check\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default DropdownMultiple;","map":{"version":3,"sources":["/Users/Namrata/Documents/Projects/nysl-mapping/src/components/DropdownMultiple.js"],"names":["React","Component","FontAwesome","DropdownMultiple","constructor","props","state","listOpen","headerTitle","title","timeOut","close","bind","componentDidUpdate","setTimeout","window","addEventListener","removeEventListener","componentWillUnmount","setState","getDerivedStateFromProps","nextProps","count","list","filter","a","selected","length","titleHelper","toggleList","prevState","render","toggleItem","e","stopPropagation","map","item","id","key"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport FontAwesome from 'react-fontawesome'\n // import '../styles/global.css'\n\nclass DropdownMultiple extends Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      listOpen: false,\n      headerTitle: this.props.title,\n      timeOut: null\n    }\n    this.close = this.close.bind(this)\n  }\n\n  componentDidUpdate(){\n    const { listOpen } = this.state\n    setTimeout(() => {\n      if(listOpen){\n        window.addEventListener('click', this.close)\n      }\n      else{\n        window.removeEventListener('click', this.close)\n      }\n    }, 0)\n  }\n\n  componentWillUnmount(){\n    window.removeEventListener('click', this.close)\n  }\n\n  close(timeOut){\n    this.setState({\n      listOpen: false\n    })\n  }\n\n  static getDerivedStateFromProps(nextProps){\n    const count = nextProps.list.filter(function(a) { return a.selected; }).length;\n    if(count === 0){\n      return {headerTitle: nextProps.title}\n    }\n    else if(count === 1){\n      return {headerTitle: `${count} ${nextProps.titleHelper}`}\n    }\n    else if(count > 1){\n      return {headerTitle: `${count} ${nextProps.titleHelper}s`}\n    }\n  }\n\n  toggleList(){\n    this.setState(prevState => ({\n      listOpen: !prevState.listOpen\n    }))\n  }\n\n  render(){\n    const{list, toggleItem} = this.props\n    const{listOpen, headerTitle} = this.state\n    return(\n      <div className=\"dd-wrapper\">\n        <div className=\"dd-header\" onClick={() => this.toggleList()}>\n            <div className=\"dd-header-title\">{headerTitle}</div>\n            {listOpen\n              ? <FontAwesome name=\"angle-up\" size=\"2x\"/>\n              : <FontAwesome name=\"angle-down\" size=\"2x\"/>\n            }\n        </div>\n       {listOpen && <ul className=\"dd-list\" onClick={e => e.stopPropagation()}>\n         {list.map((item) => (\n           <li className=\"dd-list-item\" key={item.title} onClick={() => toggleItem(item.id, item.key)}>\n             {item.title} {item.selected && <FontAwesome name=\"check\"/>}\n           </li>\n          ))}\n        </ul>}\n      </div>\n    )\n  }\n\n}\n\nexport default DropdownMultiple\n"]},"metadata":{},"sourceType":"module"}