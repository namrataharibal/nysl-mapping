{"ast":null,"code":"import _slicedToArray from \"/Users/Namrata/Documents/Projects/nysl-mapping/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Namrata/Documents/Projects/nysl-mapping/src/components/Map.js\";\nimport React, { useState } from 'react';\nimport ReactMapGL, { Marker, Popup } from 'react-map-gl';\nimport FarmData from './FarmData';\n\nfunction Map() {\n  const _useState = useState({\n    width: '90vw',\n    height: '80vh',\n    latitude: 42.2994,\n    longitude: -75.2179,\n    zoom: 6\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        viewport = _useState2[0],\n        setViewport = _useState2[1];\n\n  const _useState3 = useState([null]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        selectedFarm = _useState4[0],\n        setSelectedFarm = _useState4[1];\n\n  var markers = FarmData.map(farm => {\n    return React.createElement(Marker, {\n      key: farm.id,\n      latitude: farm.latitude,\n      longitude: farm.longitude,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => {\n        setSelectedFarm(farm);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"soil-icon\",\n      src: \"soil-icon.png\",\n      alt: \"soil icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    })));\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \" Rendering the map here! \"), React.createElement(ReactMapGL, Object.assign({}, viewport, {\n    mapboxApiAccessToken: process.env.REACT_APP_MAPBOX_TOKEN,\n    mapStyle: \"mapbox://styles/namrata-haribal/ck1uz9gna7ukn1cqrpb4gx5np\",\n    onViewportChange: viewport => {\n      setViewport(viewport);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), markers, selectedFarm ? React.createElement(Popup, {\n    key: selectedFarm.id,\n    latitude: selectedFarm.latitude,\n    longitude: setSelectedFarm.longitude,\n    onClose: () => {\n      setSelectedFarm(null);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \" \", selectedFarm.farmname, \" \"))) : null));\n}\n\nexport default Map;","map":{"version":3,"sources":["/Users/Namrata/Documents/Projects/nysl-mapping/src/components/Map.js"],"names":["React","useState","ReactMapGL","Marker","Popup","FarmData","Map","width","height","latitude","longitude","zoom","viewport","setViewport","selectedFarm","setSelectedFarm","markers","map","farm","id","process","env","REACT_APP_MAPBOX_TOKEN","farmname"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,UAAP,IAAoBC,MAApB,EAA4BC,KAA5B,QAAwC,cAAxC;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAGA,SAASC,GAAT,GAAe;AAAA,oBAEmBL,QAAQ,CAAC;AACvCM,IAAAA,KAAK,EAAE,MADgC;AAEvCC,IAAAA,MAAM,EAAE,MAF+B;AAGvCC,IAAAA,QAAQ,EAAG,OAH4B;AAIvCC,IAAAA,SAAS,EAAE,CAAC,OAJ2B;AAKvCC,IAAAA,IAAI,EAAE;AALiC,GAAD,CAF3B;AAAA;AAAA,QAENC,QAFM;AAAA,QAEIC,WAFJ;;AAAA,qBAU2BZ,QAAQ,CAAC,CAAC,IAAD,CAAD,CAVnC;AAAA;AAAA,QAUNa,YAVM;AAAA,QAUQC,eAVR;;AAYb,MAAIC,OAAO,GAAGX,QAAQ,CAACY,GAAT,CAAaC,IAAI,IAAI;AACjC,WACI,oBAAC,MAAD;AACE,MAAA,GAAG,EAAEA,IAAI,CAACC,EADZ;AAEE,MAAA,QAAQ,EAAED,IAAI,CAACT,QAFjB;AAGE,MAAA,SAAS,EAAES,IAAI,CAACR,SAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKM;AACE,MAAA,OAAO,EAAG,MAAM;AAACK,QAAAA,eAAe,CAACG,IAAD,CAAf;AAChB,OAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGE;AACE,MAAA,SAAS,EAAC,WADZ;AAEE,MAAA,GAAG,EAAC,eAFN;AAGE,MAAA,GAAG,EAAC,WAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CALN,CADJ;AAkBD,GAnBa,CAAd;AAqBE,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADA,EAEA,oBAAC,UAAD,oBACMN,QADN;AAEE,IAAA,oBAAoB,EAAEQ,OAAO,CAACC,GAAR,CAAYC,sBAFpC;AAGE,IAAA,QAAQ,EAAC,2DAHX;AAIE,IAAA,gBAAgB,EAAGV,QAAD,IAAc;AAACC,MAAAA,WAAW,CAACD,QAAD,CAAX;AAAsB,KAJzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAKGI,OALH,EAMIF,YAAY,GACZ,oBAAC,KAAD;AACE,IAAA,GAAG,EAAEA,YAAY,CAACK,EADpB;AAEE,IAAA,QAAQ,EAAEL,YAAY,CAACL,QAFzB;AAGE,IAAA,SAAS,EAAEM,eAAe,CAACL,SAH7B;AAIE,IAAA,OAAO,EAAG,MAAM;AACdK,MAAAA,eAAe,CAAC,IAAD,CAAf;AACD,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAMD,YAAY,CAACS,QAAnB,MADF,CATF,CADY,GAeV,IArBN,CAFA,CADF;AA+BD;;AAGH,eAAejB,GAAf","sourcesContent":["import React, {useState} from 'react';\nimport ReactMapGL, {Marker, Popup} from 'react-map-gl';\nimport FarmData from './FarmData'\n\n\nfunction Map() {\n\n  const [viewport, setViewport] = useState({\n    width: '90vw',\n    height: '80vh',\n    latitude:  42.2994,\n    longitude: -75.2179,\n    zoom: 6\n  })\n\n  const [selectedFarm, setSelectedFarm] = useState([null])\n\n  var markers = FarmData.map(farm => {\n    return(\n        <Marker\n          key={farm.id}\n          latitude={farm.latitude}\n          longitude={farm.longitude}>\n\n              <button\n                onClick={ () => {setSelectedFarm(farm);\n                }}>\n                <img\n                  className=\"soil-icon\"\n                  src=\"soil-icon.png\"\n                  alt=\"soil icon\"/>\n              </button>\n\n        </Marker>\n\n    )\n  })\n\n    return(\n      <div>\n      <h1> Rendering the map here! </h1>\n      <ReactMapGL\n        {...viewport}\n        mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\n        mapStyle=\"mapbox://styles/namrata-haribal/ck1uz9gna7ukn1cqrpb4gx5np\"\n        onViewportChange={(viewport) => {setViewport(viewport)}}>\n        {markers}\n        { selectedFarm ? (\n          <Popup\n            key={selectedFarm.id}\n            latitude={selectedFarm.latitude}\n            longitude={setSelectedFarm.longitude}\n            onClose={ () => {\n              setSelectedFarm(null);\n            }}\n\n            >\n            <div>\n              <h2> {selectedFarm.farmname} </h2>\n            </div>\n\n          </Popup>\n        ) : null}\n\n      </ReactMapGL>\n      </div>\n\n    )\n\n  }\n\n\nexport default Map\n"]},"metadata":{},"sourceType":"module"}