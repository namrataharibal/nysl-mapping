{"ast":null,"code":"import _slicedToArray from \"/Users/Namrata/Documents/Projects/nysl-mapping/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Namrata/Documents/Projects/nysl-mapping/src/components/Map.js\";\nimport React, { useState, useEffect } from 'react';\nimport ReactMapGL, { Marker, Popup } from 'react-map-gl';\nimport FarmData from './FarmData';\n\nfunction Map() {\n  const _useState = useState({\n    width: '90vw',\n    height: '80vh',\n    latitude: 42.2994,\n    longitude: -75.2179,\n    zoom: 6\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        viewport = _useState2[0],\n        setViewport = _useState2[1];\n\n  const _useState3 = useState([null]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        selectedFarm = _useState4[0],\n        setSelectedFarm = _useState4[1];\n\n  useEffect(e => {\n    console.log(\"the SELECTED farm is:\", selectedFarm);\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \" Rendering the map here! \"), React.createElement(ReactMapGL, Object.assign({}, viewport, {\n    mapboxApiAccessToken: process.env.REACT_APP_MAPBOX_TOKEN,\n    mapStyle: \"mapbox://styles/namrata-haribal/ck1uz9gna7ukn1cqrpb4gx5np\",\n    onViewportChange: viewport => {\n      setViewport(viewport);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), FarmData.map(farm => React.createElement(Marker, {\n    key: farm.id,\n    latitude: farm.latitude,\n    longitude: farm.longitude,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"soil-icon\",\n    src: \"soil-icon.png\",\n    alt: \"soil icon\",\n    onClick: () => {\n      setSelectedFarm(farm);\n      console.log(\"The selected object is:\", selectedFarm);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })))));\n}\n\nexport default Map;\n/*\n\n        { selectedFarm ? (\n          <Popup\n            key={selectedFarm.id}\n            latitude={selectedFarm.latitude}\n            longitude={setSelectedFarm.longitude}\n            onClose={ () => {\n              setSelectedFarm(null);\n            }}\n\n            >\n            <div>\n              <h2> {selectedFarm.farmname} </h2>\n            </div>\n\n          </Popup>\n        ) : null}\n\n\n\n\n\n\n */","map":{"version":3,"sources":["/Users/Namrata/Documents/Projects/nysl-mapping/src/components/Map.js"],"names":["React","useState","useEffect","ReactMapGL","Marker","Popup","FarmData","Map","width","height","latitude","longitude","zoom","viewport","setViewport","selectedFarm","setSelectedFarm","e","console","log","process","env","REACT_APP_MAPBOX_TOKEN","map","farm","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,UAAP,IAAoBC,MAApB,EAA4BC,KAA5B,QAAwC,cAAxC;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAGA,SAASC,GAAT,GAAe;AAAA,oBAEmBN,QAAQ,CAAC;AACvCO,IAAAA,KAAK,EAAE,MADgC;AAEvCC,IAAAA,MAAM,EAAE,MAF+B;AAGvCC,IAAAA,QAAQ,EAAG,OAH4B;AAIvCC,IAAAA,SAAS,EAAE,CAAC,OAJ2B;AAKvCC,IAAAA,IAAI,EAAE;AALiC,GAAD,CAF3B;AAAA;AAAA,QAENC,QAFM;AAAA,QAEIC,WAFJ;;AAAA,qBAU2Bb,QAAQ,CAAC,CAAC,IAAD,CAAD,CAVnC;AAAA;AAAA,QAUNc,YAVM;AAAA,QAUQC,eAVR;;AAYbd,EAAAA,SAAS,CAAEe,CAAD,IAAO;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCJ,YAArC;AACD,GAFQ,CAAT;AAME,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,EAEE,oBAAC,UAAD,oBACMF,QADN;AAEE,IAAA,oBAAoB,EAAEO,OAAO,CAACC,GAAR,CAAYC,sBAFpC;AAGE,IAAA,QAAQ,EAAC,2DAHX;AAIE,IAAA,gBAAgB,EAAGT,QAAD,IAAc;AAACC,MAAAA,WAAW,CAACD,QAAD,CAAX;AAAsB,KAJzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMGP,QAAQ,CAACiB,GAAT,CAAaC,IAAI,IAChB,oBAAC,MAAD;AACE,IAAA,GAAG,EAAEA,IAAI,CAACC,EADZ;AAEE,IAAA,QAAQ,EAAED,IAAI,CAACd,QAFjB;AAGE,IAAA,SAAS,EAAEc,IAAI,CAACb,SAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMI;AACE,IAAA,SAAS,EAAC,WADZ;AAEE,IAAA,GAAG,EAAC,eAFN;AAGE,IAAA,GAAG,EAAC,WAHN;AAIE,IAAA,OAAO,EAAG,MAAM;AACdK,MAAAA,eAAe,CAACQ,IAAD,CAAf;AACFN,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAsCJ,YAAtC;AACC,KAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,CADD,CANH,CAFF,CADF;AAoCD;;AAGH,eAAeR,GAAf;AAKA","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport ReactMapGL, {Marker, Popup} from 'react-map-gl';\nimport FarmData from './FarmData'\n\n\nfunction Map() {\n\n  const [viewport, setViewport] = useState({\n    width: '90vw',\n    height: '80vh',\n    latitude:  42.2994,\n    longitude: -75.2179,\n    zoom: 6\n  })\n\n  const [selectedFarm, setSelectedFarm] = useState([null])\n\n  useEffect((e) => {\n    console.log(\"the SELECTED farm is:\", selectedFarm)\n  })\n\n\n\n    return(\n      <div>\n        <h1> Rendering the map here! </h1>\n        <ReactMapGL\n          {...viewport}\n          mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\n          mapStyle=\"mapbox://styles/namrata-haribal/ck1uz9gna7ukn1cqrpb4gx5np\"\n          onViewportChange={(viewport) => {setViewport(viewport)}}>\n\n          {FarmData.map(farm => (\n            <Marker\n              key={farm.id}\n              latitude={farm.latitude}\n              longitude={farm.longitude}\n              >\n\n                <img\n                  className=\"soil-icon\"\n                  src=\"soil-icon.png\"\n                  alt=\"soil icon\"\n                  onClick={ () => {\n                    setSelectedFarm(farm);\n                  console.log(\"The selected object is:\",selectedFarm);\n                  }}\n\n                />\n            </Marker>\n          ))}\n\n\n        </ReactMapGL>\n      </div>\n    )\n\n\n\n  }\n\n\nexport default Map\n\n\n\n\n/*\n\n        { selectedFarm ? (\n          <Popup\n            key={selectedFarm.id}\n            latitude={selectedFarm.latitude}\n            longitude={setSelectedFarm.longitude}\n            onClose={ () => {\n              setSelectedFarm(null);\n            }}\n\n            >\n            <div>\n              <h2> {selectedFarm.farmname} </h2>\n            </div>\n\n          </Popup>\n        ) : null}\n\n\n\n\n\n\n */\n"]},"metadata":{},"sourceType":"module"}